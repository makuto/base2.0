##
## Compilation
##

C++ = clang++ ;
LINK = clang++ ;

# C++ = g++ ;
# LINK = g++ ;

# If I was building a library, these would be useful
# LINKFLAGS = -shared ;
# if $(UNIX)      { SUFSHR = .so ; }
# else if $(NT)   { SUFSHR = .dll ; }

## Compiler arguments

# Arguments used on all projects, regardless of any variables
# Note that Tracy 0.6.5 requires c++14 (normally C++11 would be fine)
C++FLAGS = -std=c++14 -stdlib=libstdc++
-Wall -Wextra -Wno-unused-parameter
-g
;

# This should be the only thing you need to change for a new project
BASE2_DIR = ../ ;

HDRS =
$(BASE2_DIR)
$(BASE2_DIR)/dependencies/SFML/include
$(BASE2_DIR)/dependencies/imgui
$(BASE2_DIR)/dependencies/imgui-sfml
# Dependencies/glm
;

# TODO: Make base hold all this weirdness?
if $(DEBUG_BUILD)
{
  SFML_LINKLIBS = -lsfml-audio-d -lsfml-graphics-d -lsfml-window-d -lsfml-system-d ;
}
else
{
  SFML_LINKLIBS = -lsfml-audio -lsfml-graphics -lsfml-window -lsfml-system ;
}

OPTIM = -O0 ;

##
## Linking
##

LINKLIBS =
# Standard (e.g. for Tracy)
-lpthread -ldl

# SFML
-L$(BASE2_DIR)/dependencies/SFML/lib
$(SFML_LINKLIBS)

# OpenGL
-lGL
-lGLU
-lGLEW

# Base
-L$(BASE2_DIR) -lBase20
;

# LINKFLAGS = -Wl,-rpath,. ;

# TODO: Copy libs to better directory, or static link?
LINKFLAGS = -g -stdlib=libstdc++
-Wl,-rpath,.:$(BASE2_DIR)/dependencies/SFML/lib ;

##
## Jam stuff
##

# Fix for unnecessary rebuilding any Jam project
KEEPOBJS = true ; # This doesn't actually fix anything, though it seems like it should
NOARSCAN = true ; # This actually fixes the problem
#AR = ar rUu ; # I was thinking maybe the AR command was wrong (always outputting deterministically)
               # It doesn't seem like this is the problem though
AR = ar cr ;

# Cross compilation
# E.g.
# jam -j4 -q -sCROSS_COMPILE_WINDOWS=true
# if $(CROSS_COMPILE_WINDOWS)
# {
# 	CC = x86_64-w64-mingw32-gcc ;
# 	LINK = x86_64-w64-mingw32-gcc ;
# 	AR = x86_64-w64-mingw32-ar ;
# 	SUFSHR = .dll ;
# }

# Some helpful Jam commands
# -q        : stop on failed target
# -jN       : use N cores
# -sVAR=VAL : Set VAR to VAL. Note that setting WINDOWS=false is the same as setting UNREAL=true,
#              frustratingly
# -dx       : print commands being used
# -n        : don't actually run commands
